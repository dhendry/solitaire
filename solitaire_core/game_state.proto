syntax = "proto3";

package solitaire.solitaire_core;

enum Suit {
    UNKNOWN_SUIT = 0;
    CLUBS = 1;
    DIAMONDS = 2;
    HEARTS = 3;
    SPADES = 4;
}

enum CardRank {
    UNKNOWN_RANK = 0;
    ACE = 1;
    TWO = 2;
    THREE = 3;
    FOUR = 4;
    FIVE = 5;
    SIX = 6;
    SEVEN = 7;
    EIGHT = 8;
    NINE = 9;
    TEN = 10;
    JACK = 11;
    QUEEN = 12;
    KING = 13;
}

message Card {
    Suit suit = 1;
    CardRank rank = 2;
}

message VisibleGameState {
    // Bitmasks by card and suit num:
    uint64 talon = 1;

    uint64 suit_stack = 2;

    repeated uint64 build_stacks = 3; // length 7 expected
    repeated uint32 build_stacks_num_hidden = 4; // length 7 expected
}

message HiddenGameState {
    repeated HiddenStack stack = 1; // length 7 expected
    message HiddenStack {
        repeated Card cards = 1;
    }
}

enum ActionType {
    UNKNWON_ACTION = 0;

    // Expect ony suit as additional param
    TO_SUIT_STACK = 1;

    // Expect suit and dest build stack num as params
    TALON_TO_BUILD_STACK_NUM = 2;

    // Expect suit and dest build stack num as parms
    SUIT_STACK_TO_BUILD_STACK_NUM = 3;

    // Expect src and dest build stack num as parms
    BUILD_STACK_NUM_TO_BUILD_STACK_NUM = 4;
}

message Action {
    ActionType type = 1;

    Suit suit = 2;
    int32 build_stack_src = 3;
    int32 build_stack_dest = 4;
}

